<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_58872_needit.NeedItUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utils Script Include for the NeedIt application.</description>
        <name>NeedItUtils</name>
        <script><![CDATA[var NeedItUtils = Class.create();
NeedItUtils.prototype = {
    initialize: function() {
    },
	isDatePast: function(strDate){
      // Create GlideDateTime objects for the current date and the passed in date
      var rightnow = new GlideDateTime();
      var testdate = new GlideDateTime(strDate);
    
      // If the testdate is before rightnow, return true, else return false
      return testdate.before(rightnow);
    },
	isDateToday: function(strDate){
      // Create GlideDateTime objects for the current date and the passed in date
      var rightnow = new GlideDateTime();
      var testdate = new GlideDateTime(strDate);
    
      // If the testdate is before tomorrow, return true, else return false
      return (rightnow.getLocalDate().compareTo(testdate.getLocalDate()) == 0);
    },
	isDateBeforeTomorrow: function(strDate){
      // Create GlideDateTime objects for the current date and the passed in date
      var tomorrow = new GlideDateTime();
      tomorrow.addDaysLocalTime(1);
      var testdate = new GlideDateTime(strDate);
    
      // If the testdate is before tomorrow, return true, else return false
      return testdate.before(tomorrow.getLocalDate());
    },
	isDateBeforeAdvancedNoticeDays: function(strDate, intAdvancedNoticeDays){
      // Create GlideDateTime objects for the current date and the passed in date
      var nowplusadvancednoticedays = new GlideDateTime();
      nowplusadvancednoticedays.addDaysLocalTime(intAdvancedNoticeDays);
      var testdate = new GlideDateTime(strDate);
    
      // If the testdate is before nowplusadvancednoticedays, return true, else return false
      return testdate.before(nowplusadvancednoticedays.getLocalDate());
    },
    type: 'NeedItUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-10 07:33:31</sys_created_on>
        <sys_id>72a36728972121104b18b0efe153af75</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>NeedItUtils</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_72a36728972121104b18b0efe153af75</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-14 08:32:04</sys_updated_on>
    </sys_script_include>
</record_update>
